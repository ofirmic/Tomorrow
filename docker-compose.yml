services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: weather-alerts-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: weather_alerts
      POSTGRES_USER: ${DB_USER:-weather_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-weather_user} -d weather_alerts"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API Server
  api:
    build: ./server
    container_name: weather-alerts-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-weather_user}:${DB_PASSWORD:-secure_password}@db:5432/weather_alerts
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      - KAFKA_BROKERS=kafka:9092
      - PORT=${API_PORT:-4000}
      - TOMORROW_API_KEY=${TOMORROW_API_KEY}
      - EVAL_CRON=${EVAL_CRON:-*/5 * * * *}
      - UNITS=${UNITS:-metric}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "${API_PORT:-4000}:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka Infrastructure
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: weather-alerts-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: weather-alerts-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_RETENTION_BYTES: 1073741824
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: weather-alerts-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # API Gateway (Nginx)
  gateway:
    image: nginx:1.27-alpine
    container_name: weather-alerts-gateway
    restart: unless-stopped
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    ports:
      - "8080:80"


volumes:
  postgres_data:
    driver: local
